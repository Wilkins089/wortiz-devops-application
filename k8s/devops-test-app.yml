apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: devops-test-app-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.org/client-max-body-size: 20M
    nginx.ingress.kubernetes.io/proxy-body-size: 20M
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/limit-connections: '300'
    nginx.ingress.kubernetes.io/limit-rps: '900'
    nginx.ingress.kubernetes.io/limit-rpm: '2700'
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "x-powered-by: devops-test-app";
      modsecurity_rules '
        SecRuleEngine On
      ';
    cert-manager.io/cluster-issuer: "letsencrypt-production"
spec:
  tls:
    - hosts:
        -  devops-app.inktold.com
      secretName: letsencrypt-test-app-prod
  rules:
    - host: devops-app.inktold.com
      http:
        paths:
          - path: /
            backend:
              serviceName: devops-test-app
              servicePort: 80              
---
apiVersion: v1
kind: Service
metadata:
    name: devops-test-app
    namespace: production
spec:
  selector:
    app: devops-test-app
  ports:
    - port: 80
      targetPort: 3081
      protocol: TCP
  type: NodePort
  selector:
    app: devops-test-app
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: devops-test-app-db
  namespace: production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: devops-test-app
    namespace: production
    labels:
        app: devops-test-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: devops-test-app
  template:
    metadata:
      labels:
        app: devops-test-app
    spec:
     containers:
        - image: 248474610598.dkr.ecr.us-west-1.amazonaws.com/devops-test-app
          name: devops-test-app
          imagePullPolicy: Always
          ports:
            - containerPort: 3081

        - image: postgres:9.4-alpine
          name: devops-test-app-db
          imagePullPolicy: Always
          env:
          - name:   POSTGRES_PASSWORD
            value:  D@mep3rmiso
          - name:   HOSTNAME
            value:  devops-global-postgres
          ports:
            - containerPort: 5432
          
          volumeMounts:
            - name: devops-test-app-db
              mountPath: /var/lib/postgresql/data

     volumes:
        - name: devops-test-app-db
          persistentVolumeClaim:
            claimName: devops-test-app-db